<?xml version="1.0"?>
<!-- This line is a comment that won't appear in the generated document. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd"[
      <!-- For each RFC you want to reference, add a line like below and then
           see the references section at the end.  This line tells the
           tool to pull the reference from the database. -->
      <!ENTITY rfc2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
      <!ENTITY rfc3972 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3972.xml">
      <!ENTITY rfc4429 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4429.xml">
      <!ENTITY rfc4941 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4941.xml">
      <!ENTITY rfc4944 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4944.xml">
      <!ENTITY rfc5535 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5535.xml">
      <!ENTITY rfc6724 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6724.xml">
      <!ENTITY rfc6973 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6973.xml">
      <!ENTITY rfc7217 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7217.xml">
      <!ENTITY rfc7288 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7288.xml">
      <!ENTITY rfc7421 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7421.xml">
      <!ENTITY rfc7428 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7428.xml">
      <!-- For each Internet Draft you want to reference, add a line like
           below and then see the references section at the end. -->
      <!ENTITY I-D.ietf-6man-ipv6-address-generation-privacy PUBLIC ''
          'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-6man-ipv6-address-generation-privacy.xml'>
      <!ENTITY I-D.ietf-6man-default-iids PUBLIC ''
          'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-6man-default-iids.xml'>
      <!ENTITY I-D.ietf-6lo-6lobac PUBLIC ''
          'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-6lo-6lobac.xml'>
      <!ENTITY I-D.ietf-6lo-btle PUBLIC ''
          'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-6lo-btle.xml'>
      <!ENTITY I-D.ietf-6lo-dect-ule PUBLIC ''
          'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-6lo-dect-ule.xml'>
      <!ENTITY I-D.ietf-6lo-nfc PUBLIC ''
          'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-6lo-nfc.xml'>
      <!ENTITY I-D.huitema-6man-random-addresses PUBLIC ''
          'http://xml.resource.org/public/rfc/bibxml3/reference.I-D.huitema-6man-random-addresses.xml'>
      ]>
<?rfc toc='yes' ?>
<?rfc symrefs='yes' ?>
<?rfc sortrefs='no'?>
<?rfc compact='yes'?>
<!-- <?rfc-ext parse-xml-in-artwork='yes' ?> -->
<!-- <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?> -->

<!-- TODO: Update to be consistent with
     https://www.ietf.org/proceedings/93/slides/slides-93-6lo-8.pdf
  -->

<rfc docName="draft-thaler-6lo-privacy-considerations-01" ipr="trust200902" category="info">
  <front>
    <title abbrev='6lo Privacy Considerations'>Privacy Considerations for IPv6 over Networks of Resource-Constrained Nodes</title>
    <author initials='D.' surname='Thaler' fullname='Dave Thaler'>
      <organization>Microsoft</organization>
      <address>
        <postal>
          <street>One Microsoft Way</street>
          <city>Redmond</city>
          <region>WA</region>
          <code>98052</code>
          <country>USA</country>
        </postal>
        <email>dthaler@microsoft.com</email>
      </address>
    </author>
    <date year='2015' />
    <area>Internet</area>
    <keyword>unlinkability</keyword>
    <keyword>anonymity</keyword>
    <keyword>IPv6</keyword>
    <keyword>Secure Neighbor Discovery</keyword>
    <abstract>
      <t> This document discusses how a number of privacy threats apply to technologies
          designed for IPv6 over networks of resource-constrained nodes,
          and provides advice to protocol designers on how to address such threats in
          IPv6-over-foo adaptation layer specifcations.
      </t>
    </abstract>
  </front>
 
  <middle>
    <section title='Introduction'>
      <t> RFC 6973 <xref target='RFC6973'/> discusses privacy considerations for Internet protocols, and Section 5.2
          in particular covers a number of privacy-specific threats.  In the context of IPv6 addresses,
          Section 3 of <xref target='I-D.ietf-6man-ipv6-address-generation-privacy'/> provides further
          elaboration on the applicability of the privacy threats.
      </t>
      <t> When interface identifiers (IIDs) are
          generated without sufficient entropy compared to the link lifetime, devices and users can become
          vulnerable to
          the various threats discussed there, including:
      </t>
      <t><list style='symbols'>
         <t> Correlation of activities over time, if the same identifier is used for Internet traffic
             over period of time
         </t>
         <t> Location tracking, if the same interface identifier is used with different prefixes as a device
             moves between different networks
         </t>
         <t> Device-specific vulnerability exploitation, if the identifier helps identify a vendor or version
             or protocol and hence suggests what types of attacks to try
         </t>
         <t> Address scanning, which enables all of the above attacks by off-link attackers.
         </t>
         </list>
      </t>
      <t> Typically "enough" bits of entropy means at least 46 bits (see <xref target="entropy"/> for why);
          ideally all 64 bits of
          the IID should be used, although historically some bits have been excluded for reasons discussed 
          in <xref target='RFC7421'/>.
      </t>
      <t> For these reasons, <xref target='I-D.ietf-6man-default-iids'/> recommends
          using the address generation scheme in <xref target='RFC7217'/>, rather than
          addresses generated from a fixed IEEE identifier.
      </t>
      <t> Furthermore, to mitigate the threat of correlation of activities over time on long-lived links,
          <xref target='RFC4941'/>
          specifies the notion of a "temporary" address to be used for transport sessions (typically
          locally-initiated outbound traffic to the Internet) that should not be linkable
          to a more permanent identifier such as a DNS name, user name, or stable hardware address.  
          Indeed, the default
          address selection rules <xref target='RFC6724'/> now prefer temporary addresses by default for
          outgoing connections.  
          If a device needs to simultaneously support unlinkable traffic as well as traffic that is linkable
          to such a stable identifier, this necessitates supporting simultaneous use of multiple addresses
          per device.
      </t>
      <!--
          <t> Finally, allowing efficient use of addresses that are not IEEE-identifier-based also has additional
              security benefits not specific to privacy.  For example, addresses such as
              Cryptographically Generated Addresses (CGAs) <xref target='RFC3972'/> and
              Hash-Based Addresses (HBAs) <xref target='RFC5535'/> can be used in security protocols
              such as Secure Neighbor Discovery (SeND) <xref target='RFC6496'/>, IPsec, etc.  Such techniques
              rely on having around 59 or more bits of entropy in the address to provide sufficient
              cryptographic protection.
          </t>
       -->
    </section>

    <!--
      <section title='Terminology'>
        <t> This document uses the terminology defined in Section 3 of <xref target='RFC6973'/>, including
            terms such as "(un)linkability" and "anonymity set".
        </t>
        <t>  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
             "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
             document are to be interpreted as described in <xref target='RFC2119'/>.
        </t>
      </section>
    -->

    <section title="Amount of Entropy Needed" anchor="entropy">
      <t> In terms of privacy threats discussed in <xref target='I-D.ietf-6man-ipv6-address-generation-privacy'/>,
          the one with the need for the most entropy is address scans.  
          To mitigate address scans, one needs enough entropy to make the probability of a successful address
          probe be negligible. Typically this is measured in the length of time it would take to have a 50%
          probability of getting at least one hit. Address scans often rely on sending a packet such as a
          TCP SYN or ICMP Echo Request, and determining whether the reply is an ICMP unreachable error 
          (if no host exists) or a TCP response or ICMP Echo Reply (if a host exists), or neither in which case 
          nothing is known for certain.
      </t>
      <t> Many privacy-sensitive devices support a "stealth mode" as discussed in Section 5 of 
          <xref target='RFC7288'/> whereby they will not send a TCP RST or ICMP Echo Reply.  In such cases,
          and when the device does not listen on a well-known TCP port known to the scanner, the effectiveness
          of an address scan is limited by the ability to get ICMP unreachable errors, since the attacker
          can only infer the presence of a host based on the absense of an ICMP unreachable error.
      </t>
      <t> Generation of ICMP unreachable errors is typically rate limited to 2 per second (the
          default in routers such as Cisco routers running IOS 12.0 or later). Such a rate results in taking
          about a year to completely scan 26 bits of space.  
      </t>
      <t>
          The actual math is as follows. Let 2^N be the number of devices on the subnet.  Let 2^M be the
          size of the space to scan (i.e., M bits of entropy).  Let S be the number of scan attempts.
          The formula for a 50% chance of getting at least one hit in S attempts is: 
          P(at least one success) = 1 - (1 - 2^N/2^M)^S = 1/2.
          Assuming 2^M >> S, this simplifies to: S * 2^N/2^M = 1/2, giving S = 2^(M-N-1), or
          M = N + 1 + log_2(S).  Using a scan rate of 2 per second, this results in the following rule of thumb:
      </t>
      <t><list style='none'>
          <t>
          Bits of entropy needed = log_2(# devices per link) + log_2(seconds of link lifetime) + 2
          </t>
          </list>
      </t>
      <t> For example, for a network with at most 2^16 devices on the same subnet, and the average
          lifetime of a device being 4 years (2^28 seconds) or less, this results in a need for at
          least 46 bits of entropy (16+28+2) so that an address scan would need to be sustained for
          longer than the lifetime of devices to have a 50% chance of getting a hit.
      </t>
      <t> Although 46 bits of entropy may be enough to provide privacy in such cases, 59 or more bits of entropy 
          would be needed if addresses
          are used to provide security against attacks such as spoofing, as CGAs <xref target='RFC3972'/> and 
          HBAs <xref target='RFC5535'/> do, since attacks are not limited by ICMP rate limiting but by the 
          processing power of the attacker. See those RFCs for more discussion.
      </t>
      <t> If, on the other hand, the devices being scanned for do not implement a "stealth mode", but respond 
          with TCP RST or ICMP Echo Reply packets, then the address scan is not limited by the ICMP unreachable 
          rate limit in routers, since the attacker can determine the presence of a host without them.
          In such cases, more bits of entropy would be needed to provide the same level of protection.
      </t>
    </section>

    <section title='Potential Approaches'>
      <t> The table below shows the number of bits of entropy currently available in various
          technologies:
      </t>
      <figure>
        <artwork>
  +---------------+--------------------------+--------------------+
  | Technology    | Reference                | Bits of Entropy    |
  +---------------+--------------------------+--------------------+
  | 802.15.4      | [RFC4944]                | 16+ or any EUI-64  |
  | Bluetooth LE  | [I-D.ietf-6lo-btle]      | 48                 |
  | DECT ULE      | [I-D.ietf-6lo-dect-ule]  | 40 or any EUI-48   |
  | MS/TP         | [I-D.ietf-6lo-6lobac]    | 8 or 64            |
  | ITU-T G.9959  | [RFC7428]                | 8                  |
  | NFC           | [I-D.ietf-6lo-nfc]       | 6 or ???           |
  +---------------+--------------------------+--------------------+
        </artwork>
      </figure>

      <t> Such technologies generally support either IEEE identifiers or so called "Short Addresses",
          or both, as link layer addresses.  We discuss each in turn.
      </t>

      <section title='IEEE-Identifier-Based Addresses'>
        <t> Some technologies allow the use of IEEE EUI-48 or EUI-64 identifiers, or allow
            using an arbitrary 64-bit identifier.  Using such an identifier to construct IPv6 addresses
            makes it easy to use the normal LOWPAN_IPHC encoding
            with stateless compression, allowing such IPv6 addresses to be fully elided in common cases.
        </t>
        <t> Interfaces identifiers formed from IEEE identifiers can have insufficient entropy unless the
            IEEE identifier itself has sufficient entropy, and enough bits of entropy
            are carried over into the IPv6 address to sufficiently mitigate the threats.
            <!-- As noted earlier,  -->
            Privacy threats other than "Correlation over time" can be mitigated using per-network randomized
            IEEE identifiers with 46 or more bits of entropy.  A number of such proposals can be found at
            &lt;https://mentor.ieee.org/privecsg/documents&gt;, and Section 10.8 of <xref target='BTCorev4.1'/>
            specifies one for Bluetooth.  Using IPv6 addresses derived from
            such IEEE identifiers would be roughly equivalent to those specified in <xref target='RFC7217'/>.
        </t>
        <t> Correlation over time can be mitigated if the IEEE identifier itself changes often enough,
            such as each time the link is established, if the link lifetime is short.
            For further discussion, see <xref target="I-D.huitema-6man-random-addresses"/>.
        </t>
        <t> Another potential concern is that of efficiency, such as avoiding DAD all together when IPv6 addresses
            are IEEE-identifier-based.  Appendix A of <xref target='RFC4429'/> provides an analysis of address
            collision probability based on the number of bits of entropy.  A simple web search on
            "duplicate MAC addresses" will show that collisions do happen with MAC addresses, and thus
            based on the analysis in <xref target='RFC4429'/>, using sufficient bits of entropy in 
            random addresses can provide greater protection against collision than using MAC addresses.
        </t>
      </section>

      <section title='Short Addresses'>
        <t> An IPv6 interface identifier formed from a "Short Address" and a set of
            well-known constant bits (such as padding with 0's) lacks sufficient entropy to
            mitigate address scanning unless the link lifetime is extremely short.
            Furthermore, an adversary could
            also use statisical methods to determine the size of the L2 address space and thereby make some
            inference regarding the underlying technology on a given link, and target further attacks accordingly.
        </t>
        <t> When Short Addresses are desired on links that are not guaranteed to have a short enough
            lifetime, the mechanism for constructing an IPv6 interface identifier from a Short Address
            could be designed to sufficiently mitigate the problem.  For example, if all nodes on a given
            L2 network have a shared secret (such as the key needed to get on the layer-2 network),
            the 64-bit IID might be generated using a one-way hash that includes (at least) the shared secret
            together with the Short Address.  The use of such a hash would result in the IIDs being spread 
            out among the full range of IID address space, thus mitigating address scans, while still allowing
            full stateless compression/elision.
        </t>
        <t> For long-lived links, "temporary" addresses might even be generated in the same way by (for example)
            also including in the hash the Version Number from the Authoritative Border Router Option (ABDO) 
            if any.  This would allow changing temporary addresses whenever the Version Number is changed,
            even if the set of prefix or context information is unchanged. 
            <!--
                Such a scheme would likely require using
                the Context Identifier (CID) to distinguish between non-temporary addresses, "current"
                temporary addresses, and "past" temporary addresses based on a previous Version Number.
              -->
        </t>
        <t> In summary, any specification using Short Addresses should carefully construct an IID
            generation mechanism so as to provide sufficient entropy compared to the link lifetime.
        </t>
      </section>
    </section>

    <section title='Recommendations'>
        <t> The following are recommended for adaptation layer specifications:
        </t>
        <t><list style='symbols'>
           <t> Security (privacy) sections should say how address scans are mitigated.
               An address scan might be mitigated by having a link always be short-lived,
               or might be mitigated by having a large number of bits of entropy,
               or some combination.  Thus, a specification should explain what the maximum
               lifetime of a link is in practice, and show how the number of bits of entropy
               is sufficient given that lifetime.
           </t>
           <t> Technologies must define a way to include sufficient bits of entropy in
               the IPv6 interface identifier, based on the maximum link lifetime.
               Specifying that a random EUI-48 or EUI-64 can be used is one easy way
               to do so, for technologies that support such identifiers.
           </t>
           <t> Specifications should not simply construct an IPv6 interface identifier
               by padding a short address with a set of other well-known constant bits,
               unless the link lifetime is guaranteed to be extremely short.
           </t>
           <t> Specifications should make sure that an IPv6 address can change over 
               long periods of time.  For example, the interface identifier might change
               each time a device connects to the network (if connections are short), or
               might change each day (if connections can be long).  This is necessary
               to mitigate correction over time.
           </t>
           <t> If a device can roam between networks, and more than a few bits of entropy
               exist in the IPv6 interface identifier, then make sure that the interface
               identifier can vary per network as the device roams.  This is necessary
               to mitigate location tracking.
           </t>
           </list>
        </t>
    </section>

    <section title='IANA Considerations'>
      <t> This document has no actions for IANA.
      </t>
    </section>

    <section title='Security Considerations'>
      <t> This entire document is about security considerations and how to specify
          possible mitigations.
      </t>
    </section>

  </middle>

  <back>

    <references title='Normative References'>
      &rfc2119;
    </references>
   
    <references title='Informative References'>
      &rfc3972;
      &rfc4429;
      &rfc4941;
      &rfc4944;
      &rfc5535;
      &rfc6724;
      &rfc6973;
      &rfc7217;
      &rfc7288;
      &rfc7421;
      &rfc7428;
      &I-D.ietf-6man-ipv6-address-generation-privacy;
      &I-D.ietf-6man-default-iids;
      &I-D.ietf-6lo-6lobac;
      &I-D.ietf-6lo-btle;
      &I-D.ietf-6lo-dect-ule;
      &I-D.ietf-6lo-nfc;
      &I-D.huitema-6man-random-addresses;

      <reference anchor='BTCorev4.1' target='https://www.bluetooth.org/DocMan/handlers/DownloadDoc.ashx?doc_id=282159'>
        <front>
          <title>Bluetooth Core Specification Version 4.1</title>
          <author>
            <organization abbrev="Bluetooth SIG">Bluetooth Special Interest Group</organization>
          </author>
          <date year="2013" month="December"/>
        </front>
      </reference>
    </references>

  </back>
</rfc>
